def vJavaLang = '1.8'
def javaProjects = [ project(':server') ]
def bootProjects = javaProjects
def gradleDir = "${rootProject.rootDir}/gradle"

ext {
    scalaVersion = '<%= scalaVersion %>'
    scalaV = '_<%= scalaVersion.split(".", 2).join(".") %>'
}

wrapper.gradleVersion = '3.1'

buildscript {
    ext.springRepo = 'http://repo.spring.io/libs-release'

    repositories {
       maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:<%= springBootVersion %>"
        classpath "gradle.plugin.com.gorylenko.gradle-git-properties:gradle-git-properties:1.4.17"

    }
}

apply plugin: 'java'

configure(allprojects) {
    apply plugin: 'idea'
    idea {
        module {
            excludeDirs += file('.wercker')
        }
    }
}


configure(javaProjects) {
    apply plugin: 'java'
    apply plugin: 'scala'

    targetCompatibility = vJavaLang
    sourceCompatibility = vJavaLang
    repositories {
        maven { url springRepo }
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/groups/public/" }
    }

    dependencies {
        compile 'org.slf4j:slf4j-api'
        testCompile 'junit:junit'

    }

    configurations {
        // replaced with jcl-over-slf4j
        all*.exclude group: 'commons-logging', module: 'commons-logging'
        // replaced with log4j-over-slf4j
        all*.exclude group: 'log4j', module: 'log4j'
    }
}

configure(bootProjects) {
    apply plugin: 'spring-boot'
    apply from: "$gradleDir/integTest.gradle"
    apply plugin: "com.gorylenko.gradle-git-properties"

    springBoot.backupSource = false


    // Ensure env variable are loaded, like -DSPRING_PROFILES_ACTIVE
    bootRun {
        systemProperties System.properties
    }

}